# AMI to use for nat box
# Update with the correct NAT AMI for your region. List of AMIs can be found
# here: https://github.com/pivotal-cf/terraforming-aws/blob/master/modules/infra/variables.tf
# If the above has moved, please go to https://github.com/pivotal-cf/terraforming-aws and search
# for "nat_ami_map"

amis_nat: "ami-0aba92643213491b9"

# This key must be a key with admin access
aws_access_key_id: "AKIAYYKVJFD75SJFOXQO"
aws_secret_access_key: "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"

aws_az1: "ap-south-1a"
aws_az2: "ap-south-1b"
aws_az3: "ap-south-1c"

# ARN of the wildcard certificate to use; upload this in [AWS](http://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs.html#upload-server-certificate). This must be done prior to running the pipeline.
aws_cert_arn: "arn:aws:acm:us-east-1:602011150591:certificate/a9975f03-c447-4d90-a37d-6d7ea58a809b"

# Upload PEM to AWS as the below key pair name
aws_key_name: "pcf"

aws_region: "ap-south-1"

# Ciphers
# An ordered, colon-delimited list of Golang supported TLS cipher suites in OpenSSL format.
# Operators should verify that these are supported by any clients or downstream components that will initiate TLS handshakes with the Router/HAProxy.
# The recommended settings are filled in below, change as necessary.
router_tls_ciphers: "ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384"
haproxy_tls_ciphers: "DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384"

# C2C Networking network CIDR
container_networking_nw_cidr: "10.255.0.0/16"

# For credhub integration, Set the number of credhub instances in resource config to 2
# Primary Encryption Name MUST match one of the encryption key names provided
# Encryption keys 2 and 3 are optional
credhub_primary_encryption_name: "qwertyuioplkjhgfdsaz"
credhub_encryption_key_name1:  "mnbvcxzlkjhgfdsapqwe"
credhub_encryption_key_secret1: "qazxswedcvfrtgbnhyuj"
credhub_encryption_key_name2: # Optional Name 2
credhub_encryption_key_secret2: # Optional Secret 2
credhub_encryption_key_name3: # Optional Name 3
credhub_encryption_key_secret3: # Optional Secret 2

# ERT Database Credentials - Required
db_accountdb_password: "Cloudzenix@db@122"
db_accountdb_username: "czdbuser"
db_app_usage_service_password: "czappuser"
db_app_usage_service_username: "Cloudzenix@app@123"
db_autoscale_password: "Cloudzenix@autos@124"
db_autoscale_username: "czautouser"
db_ccdb_password: "Cloudzenix@ccdb@125"
db_ccdb_username: "czccdbuser"
db_credhub_password: "Cloudzenix@credh@126"
db_credhub_username: "czcredhuser"
db_diego_password: "Cloudzenix@die@127"
db_diego_username: "czdieuser"
db_locket_password: "Cloudzenix@loc@128"
db_locket_username: "czlockuser"
db_networkpolicyserverdb_password: "Cloudzenix@nps@129"
db_networkpolicyserverdb_username: "cznpsuser"
db_nfsvolumedb_password: "Cloudzenix@nvd@130"
db_nfsvolumedb_username: "cznvduser"
db_notifications_password: "Cloudzenix@nsp@131"
db_notifications_username: "cznspuser"
db_routing_password: "Cloudzenix@rut@132"
db_routing_username: "czrutuser"
db_silk_password: "Cloudzenix@slk@133"
db_silk_username: "czslkuser"
db_uaa_password: "Cloudzenix@uaa@134"
db_uaa_username: "czuaauser"

# RDS Master Credentials - Required
db_master_password: "Cloudzenix@mst@097!"
db_master_username: "czmstuser"

# Optional PEM-encoded certificates to add to BOSH VMs
director_certificates:

# Domain Names for ERT
pcf_ert_domain: "opsman.pcf.cloudzenix.online" # This is the domain you will access ERT with, for example: pcf.example.com.
system_domain: "system.pcf.cloudzenix.online" # e.g. system.pcf.example.com
apps_domain: "apps.pcf.cloudzenix.online"   # e.g. apps.pcf.example.com

# Errands to disable prior to deploying ERT
# Valid values:
#   all
#   none
#   "" (empty string - equivalent to none)
#   Any combination of the following, separated by comma:
#     bootstrap
#     deploy-autoscaler
#     deploy-notifications
#     deploy-notifications-ui
#     nfsbrokerpush
#     push-apps-manager
#     push-pivotal-account
#     push-usage-service
#     rejoin-unsafe
#     send-email
#     smoke_tests
#     test-autoscaling
ert_errands_to_disable: none

# PCF Elastic Runtime minor version to track
ert_major_minor_version: ^2\.1\.[0-9]+$ # ERT minor version to track (e.g ^2\.1\.[0-9]+$ will track 2.0.x versions)

# Optional. Duration in seconds to maintain an open connection when client supports keep-alive.
frontend_idle_timeout: 61

# Optional - if your git repo requires an SSH key.
git_private_key: 

haproxy_forward_tls: enable # If enabled HAProxy will forward all requests to the router over TLS (enable|disable)
haproxy_backend_ca:         # Required if haproxy_forward_tls is enabled - HAProxy will use the CA provided to verify the certificates provided by the router.

# Whether or not the ERT VMs are internet connected.
internet_connected: false

# Email address for sending mysql monitor notifications
mysql_monitor_recipient_email: sreekanth.reddy@cloudzenix.com

# Operations Manager credentials
# opsman_admin_username/opsman_admin_password needs to be specified
opsman_admin_username: "Cloudzenix"
opsman_admin_password: "cloudzenix@ops@097!"

# CIDRs to allow HTTPS access to Operations Manager from
opsman_allow_https_cidr_ranges: "0.0.0.0/32"

# CIDRs to allow SSH access to Operations Manager from; configure PEM as well with the private key
opsman_allow_ssh_cidr_ranges: "0.0.0.0/32"

# The domain to access Operations Manager;
opsman_domain_or_ip_address: "opsman.pcf.cloudzenix.online" #This must be your pcf_ert_domain with "opsman." as a prefix. For example, opsman.pcf.example.com

# PCF Ops Manager minor version to track
opsman_major_minor_version: ^2\.1\.[0-9]+$ # Ops Manager minor version to track (e.g ^2\.1\.[0-9]+$ will track 2.0.x versions)

# Private Key of the keypair uploaded to AWS to be used for Operations Manager, NAT VMs.
PEM: "pcf"

# Pivnet token for downloading resources from Pivnet. Find this token at https://network.pivotal.io/users/dashboard/edit-profile
pivnet_token: "h_Vpg8TZvkF33vJ6Jhwm"

# Optional. If blank the cert(s) will be generated:
poe_ssl_name1:
poe_ssl_cert1:
poe_ssl_key1:

# Route53 zone to add records to
ROUTE_53_ZONE_ID: "Z0047012345SPV29LHM87"

# Optional - these certificates can be used to validate the certificates from incoming client requests.
# All CA certificates should be appended together into a single collection of PEM-encoded entries.
routing_custom_ca_certificates:

# Disable HTTP on gorouters - do not set this param to anything other than `false`; ssl is terminated at the load balancer
routing_disable_http: false

# Support for the X-Forwarded-Client-Cert header. Possible values: (load_balancer|ha_proxy|router)
routing_tls_termination: load_balancer

# For terraform state file (http://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region)
S3_ENDPOINT: "https://s3.ap-south-1.amazonaws.com"
S3_OUTPUT_BUCKET: "pas-terraform"

# Setting appropriate Application Security Groups is critical for a secure
# deployment. Change the value of the param below to "X" to acknowledge that
# once the Elastic Runtime deployment completes, you will review and set the
# appropriate application security groups.
# See https://docs.pivotal.io/pivotalcf/opsguide/app-sec-groups.html
security_acknowledgement: "X"

# Subnets
#   Pipeline uses six types of network: Public, Elastic Runtime, Services, Dynamic Services and RDS and Infrastructure networks
#
#   * Public Network: Ops manager and Nat boxes who needs public internet accessible through internet gateway
#   * Elastic Runtime network: Cloud Foundry components, **three subnets on three AZs to achieve HA**
#   * Services network: Deploy PCF tile services, **three subnets on three AZs to achieve HA**
#   * Dynamic Services network: Deploy dynamic services, **three subnets on three AZs to achieve HA**
#   * RDS network: Deploy RDS databases, **three subnets on three AZs to achieve HA**
#   * Infrastructure network: Deploy Bosh director
dynamic_services_subnet_cidr_az1: 192.168.112.0/22
dynamic_services_subnet_cidr_az2: 192.168.128.0/22
dynamic_services_subnet_cidr_az3: 192.168.144.0/22
dynamic_services_subnet_reserved_ranges_z1: 192.168.112.0 - 192.168.112.10
dynamic_services_subnet_reserved_ranges_z2: 192.168.128.0 - 192.168.128.10
dynamic_services_subnet_reserved_ranges_z3: 192.168.144.0 - 192.168.144.10
ert_subnet_cidr_az1: 192.168.16.0/20
ert_subnet_cidr_az2: 192.168.32.0/20
ert_subnet_cidr_az3: 192.168.48.0/20
ert_subnet_reserved_ranges_z1: 192.168.16.0 - 192.168.16.10
ert_subnet_reserved_ranges_z2: 192.168.32.0 - 192.168.32.10
ert_subnet_reserved_ranges_z3: 192.168.48.0 - 192.168.48.10
infra_subnet_cidr_az1: 192.168.6.0/24
infra_subnet_reserved_ranges_z1: 192.168.6.0 - 192.168.6.10
nat_ip_az1: 192.168.0.6
nat_ip_az2: 192.168.1.6
nat_ip_az3: 192.168.2.6
opsman_ip_az1: 192.168.0.7
public_subnet_cidr_az1: 192.168.0.0/24
public_subnet_cidr_az2: 192.168.1.0/24
public_subnet_cidr_az3: 192.168.2.0/24
rds_subnet_cidr_az1: 192.168.3.0/24
rds_subnet_cidr_az2: 192.168.4.0/24
rds_subnet_cidr_az3: 192.168.5.0/24
services_subnet_cidr_az1: 192.168.64.0/20
services_subnet_cidr_az2: 192.168.80.0/20
services_subnet_cidr_az3: 192.168.96.0/20
services_subnet_reserved_ranges_z1: 192.168.64.0 - 192.168.64.10
services_subnet_reserved_ranges_z2: 192.168.80.0 - 192.168.80.10
services_subnet_reserved_ranges_z3: 192.168.96.0 - 192.168.96.10
vpc_cidr: 192.168.0.0/16

# Prefix to use for Terraform-managed infrastructure, e.g. 'pcf-terraform'
# Must be globally unique.
terraform_prefix: "statefile"
